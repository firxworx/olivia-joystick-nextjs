import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useMatcapTexture } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { BASE_URL } from 'src/constants/app'

const MODEL_FILE = `${BASE_URL}/assets/3d/models/vehicles/shiny-ufo.glb`

/*
original tsx generated by: https://github.com/pmndrs/gltfjsx
tsx modified by: @firxworx

model author: Manuel W. (https://sketchfab.com/nebulariser)
license: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
source: https://sketchfab.com/3d-models/billy-meier-ufo-b21083ba65824b4a9b1b4720b705b32e
title: Billy Meier UFO
*/

type GLTFResult = GLTF & {
  nodes: {
    Sphere: THREE.Mesh
    Sphere001: THREE.Mesh
    Cylinder001: THREE.Mesh
    Cylinder002: THREE.Mesh
    Cylinder003: THREE.Mesh
    Sphere001_1: THREE.Mesh
    Sphere001_2: THREE.Mesh
    Cylinder004: THREE.Mesh
    Cylinder005: THREE.Mesh
    Cylinder006: THREE.Mesh
    Cylinder007: THREE.Mesh
    Cylinder008: THREE.Mesh
    Cylinder: THREE.Mesh
    Sphere004: THREE.Mesh
  }
  materials: {
    Metal: THREE.MeshStandardMaterial
    Black: THREE.MeshStandardMaterial
    ['Red Light']: THREE.MeshStandardMaterial
  }
}

export const ShinyUFO: React.FC<JSX.IntrinsicElements['group']> = (props) => {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(MODEL_FILE) as GLTFResult

  // chrome 3B3C3F_DAD9D5_929290_ABACA8, bronze-ish gold 422509_C89536_824512_0A0604
  const [matcapMetal] = useMatcapTexture('3B3C3F_DAD9D5_929290_ABACA8', 1024)
  // white E8E5DE_B5AFA6_CCC5BC_C4C4BB
  const [matcapDiaper] = useMatcapTexture('E8E5DE_B5AFA6_CCC5BC_C4C4BB', 1024)
  // lightblue 7DA1BA_A4CCE8_5D7A8B_5E7C94
  const [matcapEye] = useMatcapTexture('7DA1BA_A4CCE8_5D7A8B_5E7C94', 1024)
  // gray 636363_AAAAAA_949494_252525
  const [matcapPupil] = useMatcapTexture('636363_AAAAAA_949494_252525', 1024)

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Sphere.geometry}
        material={nodes.Sphere.material}
        position={[0, -0.02, 0]}
        scale={[1.29, 0.34, 1.29]}
      />
      <mesh
        geometry={nodes.Sphere001.geometry}
        material={nodes.Sphere001.material}
        position={[0, 0.02, 0]}
        rotation={[-Math.PI, 0, 0]}
        scale={[1.29, 0.18, 1.29]}
      />
      <mesh geometry={nodes.Cylinder001.geometry} material={nodes.Cylinder001.material} position={[0, 1.09, 0]} />
      <mesh geometry={nodes.Cylinder002.geometry} material={nodes.Cylinder002.material} />
      <mesh geometry={nodes.Cylinder003.geometry} material={nodes.Cylinder003.material} />
      <group position={[0, 0.14, 0]} scale={[0.46, 0.27, 0.46]}>
        <mesh geometry={nodes.Sphere001_1.geometry} material={nodes.Sphere001_1.material} />
        <mesh geometry={nodes.Sphere001_2.geometry} material={nodes.Sphere001_2.material} />
      </group>
      <mesh
        geometry={nodes.Cylinder004.geometry}
        material={nodes.Cylinder004.material}
        position={[0, -0.46, 0]}
        scale={[0.64, 0.78, 0.64]}
      />
      <mesh geometry={nodes.Cylinder005.geometry} material={nodes.Cylinder005.material} position={[0, -0.29, 0]} />
      <mesh geometry={nodes.Cylinder006.geometry} material={materials['Red Light']} />
      <mesh geometry={nodes.Cylinder007.geometry} material={nodes.Cylinder007.material} />
      <mesh geometry={nodes.Cylinder008.geometry} material={nodes.Cylinder008.material} position={[0, 1.28, 0]} />
      <mesh geometry={nodes.Cylinder.geometry} material={nodes.Cylinder.material} scale={[1.19, 0.01, 1.19]} />
      <mesh
        geometry={nodes.Sphere004.geometry}
        material={nodes.Sphere004.material}
        position={[0, 0.5, 0]}
        scale={[0.01, 0.02, 0.01]}
      />
    </group>
  )
}

useGLTF.preload(MODEL_FILE)
